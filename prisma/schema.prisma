generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  stripeCustomerId String?
  accounts         Account[]
  sessions         Session[]
  orders           Order[]
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Order {
  id              String      @id @default(cuid())
  amount          Float
  status          OrderStatus
  createdAt       DateTime    @default(now())
  paymentIntentId String?     @unique
  user            User        @relation(fields: [userId], references: [id])
  userId          String

  products Product[]
}

model Product {
  id          String  @id @default(cuid())
  name        String
  unitAmount  String
  quantity    Float   @default(0)
  description String?
  image       String?
  order       Order?  @relation(fields: [orderId], references: [id])
  orderId     String?
}

enum OrderStatus {
  PENDING
  CONFIRMED
}
